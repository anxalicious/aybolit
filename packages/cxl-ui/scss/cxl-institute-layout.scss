@use "~@conversionxl/cxl-lumo-styles/scss/mixins";

:host {
  display: block;
}

aside,
main {
  @include mixins.wrap();
}

/**
 * Fixed container, scrolling content columns.
 *
 * @see https://codepen.io/geon/pen/obrWxm
 */
:host([wide]) {
  position: absolute;
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;

  #main {
    display: flex;
    flex: 1 1 auto;
    width: 100%;
    overflow: hidden;

    > * {
      height: 100%;
      overflow-y: auto;
    }

    > aside {
      flex: 0 0 auto;
      padding-left: unset;
    }

    > main {
      flex: 1;
    }
  }
}

/**
 * Drawer.
 */
/* stylelint-disable no-duplicate-selectors */
$toggle-icon: "lumo:angle-right";

aside {
  // @see https://stackoverflow.com/questions/3508605/how-can-i-transition-height-0-to-height-auto-using-css
  max-height: var(--lumo-font-size-xxl);
  color: var(--lumo-shade-20pct);
  transition: 0.25s cubic-bezier(0, 1, 0, 1);

  &[opened] {
    max-height: calc(100vh * 2);
    color: unset;

    + main [icon="#{$toggle-icon}"] {
      transform: rotate(-90deg);
    }
  }
}

main {
  display: flow-root;
  margin-top: calc(39px + var(--lumo-space-m));
  background-color: var(--lumo-tint);

  [icon="#{$toggle-icon}"] {
    transform: rotate(90deg);
  }

  > vaadin-button {
    position: absolute;
    background-color: var(--lumo-tint);
    border: solid 1px var(--lumo-shade-10pct);
    transform: translateY(-39px);

    :host(:not([wide])) & {
      border-bottom: unset;
    }
  }
}

:host([wide]) {
  aside {
    --cxl-institute-layout-drawer-width: 16em;

    width: var(--cxl-institute-layout-drawer-width);
    max-height: unset;
    margin-right: calc((var(--cxl-institute-layout-drawer-width) - var(--lumo-space-m)) * -1);

    &[opened] {
      margin-right: 0;

      + main [icon="#{$toggle-icon}"] {
        transform: rotate(180deg);
      }
    }
  }

  main {
    position: initial;
    z-index: 0;
    margin-top: unset;

    [icon="#{$toggle-icon}"] {
      transform: unset;
    }

    > vaadin-button {
      border-right: unset;
      transform: translate3d(-58px, 12px, 0);

      &:hover {
        color: var(--lumo-primary-color);
      }
    }
  }

  #main {
    @include mixins.wrap();
  }
}
/* stylelint-enable no-duplicate-selectors */

/**
 * Visuals.
 */
/* stylelint-disable no-duplicate-selectors */
main {
  box-shadow: var(--lumo-box-shadow-s);
}

:host([wide]) {
  main {
    border-top-left-radius: var(--lumo-border-radius-l);
  }
}
/* stylelint-enable no-duplicate-selectors */
